/*
 * array.c
 *
 *  Created on: Sep 1, 2025
 *      Author: NIKHIL
 */


#include<stdint.h>
#include<stdio.h>

void arr_display(uint8_t const *const pArr,uint32_t size);
int main(){

	// initialization
	uint32_t studentAge[100];
	uint8_t len = 5;
	uint8_t someOtherData[len];
	uint8_t data[10] = {0xFF, 0xFF, 0xFE, 0xFD }; // remaining are 0, same as {0xFF, 0xFF, 0xFE, 0xFD, 0, 0, 0, 0, 0, 0}

	// size and address of array
	printf("Size of Array : %u \n", sizeof(studentAge));
	printf("Base address : %p \n", studentAge);

	// read and write

	*(data + 1) = 0xF9; 		// writing data into array
	data[2] = 0x8; 				// same as previous updating or writing into array
	printf("Data of array of index 6: %X \n" ,data[1]);
	printf("Data of array of index 6: %X\n", *(data + 1)); // other way of accessing data

	// printing all data of array
	for(uint32_t i = 0; i < 10; i++){
		data[i] = 0xF9;
		printf("%d \t %X \n",i,data[i]);
	}

	// passing array to a function
	uint32_t nItems = sizeof(data)/ sizeof(uint8_t);
	arr_display(data, nItems);

	return 0;
}


void arr_display(uint8_t const *const pArr,uint32_t size){

	for(uint32_t i = 0; i < size; i++){
		printf("%d \t %X \n",i,pArr[i]);
	}


}
