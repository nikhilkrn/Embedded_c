
Wokwi_LedBlinking.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000b4  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000184  080000b4  080000b4  000010b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000238  08000240  00001240  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000238  08000238  00001240  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  08000238  08000238  00001240  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  08000238  08000240  00001240  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000238  08000238  00001238  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  0800023c  0800023c  0000123c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  00001240  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000240  00002000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000240  0000201c  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  00001240  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000103  00000000  00000000  00001268  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000000a8  00000000  00000000  0000136b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000048  00000000  00000000  00001418  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 0000002d  00000000  00000000  00001460  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00000f9a  00000000  00000000  0000148d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000056f  00000000  00000000  00002427  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00003cec  00000000  00000000  00002996  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  00006682  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000005c  00000000  00000000  000066c8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000068  00000000  00000000  00006724  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000b4 <__do_global_dtors_aux>:
 80000b4:	b510      	push	{r4, lr}
 80000b6:	4c06      	ldr	r4, [pc, #24]	@ (80000d0 <__do_global_dtors_aux+0x1c>)
 80000b8:	7823      	ldrb	r3, [r4, #0]
 80000ba:	2b00      	cmp	r3, #0
 80000bc:	d107      	bne.n	80000ce <__do_global_dtors_aux+0x1a>
 80000be:	4b05      	ldr	r3, [pc, #20]	@ (80000d4 <__do_global_dtors_aux+0x20>)
 80000c0:	2b00      	cmp	r3, #0
 80000c2:	d002      	beq.n	80000ca <__do_global_dtors_aux+0x16>
 80000c4:	4804      	ldr	r0, [pc, #16]	@ (80000d8 <__do_global_dtors_aux+0x24>)
 80000c6:	e000      	b.n	80000ca <__do_global_dtors_aux+0x16>
 80000c8:	bf00      	nop
 80000ca:	2301      	movs	r3, #1
 80000cc:	7023      	strb	r3, [r4, #0]
 80000ce:	bd10      	pop	{r4, pc}
 80000d0:	20000000 	.word	0x20000000
 80000d4:	00000000 	.word	0x00000000
 80000d8:	08000220 	.word	0x08000220

080000dc <frame_dummy>:
 80000dc:	4b04      	ldr	r3, [pc, #16]	@ (80000f0 <frame_dummy+0x14>)
 80000de:	b510      	push	{r4, lr}
 80000e0:	2b00      	cmp	r3, #0
 80000e2:	d003      	beq.n	80000ec <frame_dummy+0x10>
 80000e4:	4903      	ldr	r1, [pc, #12]	@ (80000f4 <frame_dummy+0x18>)
 80000e6:	4804      	ldr	r0, [pc, #16]	@ (80000f8 <frame_dummy+0x1c>)
 80000e8:	e000      	b.n	80000ec <frame_dummy+0x10>
 80000ea:	bf00      	nop
 80000ec:	bd10      	pop	{r4, pc}
 80000ee:	46c0      	nop			@ (mov r8, r8)
 80000f0:	00000000 	.word	0x00000000
 80000f4:	20000004 	.word	0x20000004
 80000f8:	08000220 	.word	0x08000220

080000fc <main>:


#include <stdint.h>

int main(void)
{
 80000fc:	b580      	push	{r7, lr}
 80000fe:	b082      	sub	sp, #8
 8000100:	af00      	add	r7, sp, #0


	RCC_IOENABLE |= 0x01;
 8000102:	4b1c      	ldr	r3, [pc, #112]	@ (8000174 <main+0x78>)
 8000104:	681a      	ldr	r2, [r3, #0]
 8000106:	4b1b      	ldr	r3, [pc, #108]	@ (8000174 <main+0x78>)
 8000108:	2101      	movs	r1, #1
 800010a:	430a      	orrs	r2, r1
 800010c:	601a      	str	r2, [r3, #0]

	GPIOA_MODE &= 0xFFFFF3FF;
 800010e:	23a0      	movs	r3, #160	@ 0xa0
 8000110:	05db      	lsls	r3, r3, #23
 8000112:	681a      	ldr	r2, [r3, #0]
 8000114:	23a0      	movs	r3, #160	@ 0xa0
 8000116:	05db      	lsls	r3, r3, #23
 8000118:	4917      	ldr	r1, [pc, #92]	@ (8000178 <main+0x7c>)
 800011a:	400a      	ands	r2, r1
 800011c:	601a      	str	r2, [r3, #0]
	GPIOA_MODE |= 0x01 << 10;
 800011e:	23a0      	movs	r3, #160	@ 0xa0
 8000120:	05db      	lsls	r3, r3, #23
 8000122:	681a      	ldr	r2, [r3, #0]
 8000124:	23a0      	movs	r3, #160	@ 0xa0
 8000126:	05db      	lsls	r3, r3, #23
 8000128:	2180      	movs	r1, #128	@ 0x80
 800012a:	00c9      	lsls	r1, r1, #3
 800012c:	430a      	orrs	r2, r1
 800012e:	601a      	str	r2, [r3, #0]

	for(;;){
		GPIOA_ODR |= 0x1 << 5;
 8000130:	4b12      	ldr	r3, [pc, #72]	@ (800017c <main+0x80>)
 8000132:	681a      	ldr	r2, [r3, #0]
 8000134:	4b11      	ldr	r3, [pc, #68]	@ (800017c <main+0x80>)
 8000136:	2120      	movs	r1, #32
 8000138:	430a      	orrs	r2, r1
 800013a:	601a      	str	r2, [r3, #0]
        for (volatile int i = 0; i < 300000; i++);
 800013c:	2300      	movs	r3, #0
 800013e:	607b      	str	r3, [r7, #4]
 8000140:	e002      	b.n	8000148 <main+0x4c>
 8000142:	687b      	ldr	r3, [r7, #4]
 8000144:	3301      	adds	r3, #1
 8000146:	607b      	str	r3, [r7, #4]
 8000148:	687b      	ldr	r3, [r7, #4]
 800014a:	4a0d      	ldr	r2, [pc, #52]	@ (8000180 <main+0x84>)
 800014c:	4293      	cmp	r3, r2
 800014e:	ddf8      	ble.n	8000142 <main+0x46>

    	GPIOA_ODR &= ~(0x1 << 5);
 8000150:	4b0a      	ldr	r3, [pc, #40]	@ (800017c <main+0x80>)
 8000152:	681a      	ldr	r2, [r3, #0]
 8000154:	4b09      	ldr	r3, [pc, #36]	@ (800017c <main+0x80>)
 8000156:	2120      	movs	r1, #32
 8000158:	438a      	bics	r2, r1
 800015a:	601a      	str	r2, [r3, #0]
        for (volatile int i = 0; i < 300000; i++);
 800015c:	2300      	movs	r3, #0
 800015e:	603b      	str	r3, [r7, #0]
 8000160:	e002      	b.n	8000168 <main+0x6c>
 8000162:	683b      	ldr	r3, [r7, #0]
 8000164:	3301      	adds	r3, #1
 8000166:	603b      	str	r3, [r7, #0]
 8000168:	683b      	ldr	r3, [r7, #0]
 800016a:	4a05      	ldr	r2, [pc, #20]	@ (8000180 <main+0x84>)
 800016c:	4293      	cmp	r3, r2
 800016e:	ddf8      	ble.n	8000162 <main+0x66>
		GPIOA_ODR |= 0x1 << 5;
 8000170:	e7de      	b.n	8000130 <main+0x34>
 8000172:	46c0      	nop			@ (mov r8, r8)
 8000174:	40021034 	.word	0x40021034
 8000178:	fffff3ff 	.word	0xfffff3ff
 800017c:	50000014 	.word	0x50000014
 8000180:	000493df 	.word	0x000493df

08000184 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000184:	480d      	ldr	r0, [pc, #52]	@ (80001bc <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000186:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000188:	e000      	b.n	800018c <Reset_Handler+0x8>
 800018a:	bf00      	nop

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800018c:	480c      	ldr	r0, [pc, #48]	@ (80001c0 <LoopForever+0x6>)
  ldr r1, =_edata
 800018e:	490d      	ldr	r1, [pc, #52]	@ (80001c4 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000190:	4a0d      	ldr	r2, [pc, #52]	@ (80001c8 <LoopForever+0xe>)
  movs r3, #0
 8000192:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000194:	e002      	b.n	800019c <LoopCopyDataInit>

08000196 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000196:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000198:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800019a:	3304      	adds	r3, #4

0800019c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800019c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800019e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80001a0:	d3f9      	bcc.n	8000196 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80001a2:	4a0a      	ldr	r2, [pc, #40]	@ (80001cc <LoopForever+0x12>)
  ldr r4, =_ebss
 80001a4:	4c0a      	ldr	r4, [pc, #40]	@ (80001d0 <LoopForever+0x16>)
  movs r3, #0
 80001a6:	2300      	movs	r3, #0
  b LoopFillZerobss
 80001a8:	e001      	b.n	80001ae <LoopFillZerobss>

080001aa <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80001aa:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80001ac:	3204      	adds	r2, #4

080001ae <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80001ae:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80001b0:	d3fb      	bcc.n	80001aa <FillZerobss>


/* Call static constructors */
  bl __libc_init_array
 80001b2:	f000 f811 	bl	80001d8 <__libc_init_array>
/* Call the application's entry point.*/

  bl main
 80001b6:	f7ff ffa1 	bl	80000fc <main>

080001ba <LoopForever>:

LoopForever:
  b LoopForever
 80001ba:	e7fe      	b.n	80001ba <LoopForever>
  ldr   r0, =_estack
 80001bc:	20003000 	.word	0x20003000
  ldr r0, =_sdata
 80001c0:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80001c4:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80001c8:	08000240 	.word	0x08000240
  ldr r2, =_sbss
 80001cc:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80001d0:	2000001c 	.word	0x2000001c

080001d4 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80001d4:	e7fe      	b.n	80001d4 <ADC_IRQHandler>
	...

080001d8 <__libc_init_array>:
 80001d8:	b570      	push	{r4, r5, r6, lr}
 80001da:	2600      	movs	r6, #0
 80001dc:	4c0c      	ldr	r4, [pc, #48]	@ (8000210 <__libc_init_array+0x38>)
 80001de:	4d0d      	ldr	r5, [pc, #52]	@ (8000214 <__libc_init_array+0x3c>)
 80001e0:	1b64      	subs	r4, r4, r5
 80001e2:	10a4      	asrs	r4, r4, #2
 80001e4:	42a6      	cmp	r6, r4
 80001e6:	d109      	bne.n	80001fc <__libc_init_array+0x24>
 80001e8:	2600      	movs	r6, #0
 80001ea:	f000 f819 	bl	8000220 <_init>
 80001ee:	4c0a      	ldr	r4, [pc, #40]	@ (8000218 <__libc_init_array+0x40>)
 80001f0:	4d0a      	ldr	r5, [pc, #40]	@ (800021c <__libc_init_array+0x44>)
 80001f2:	1b64      	subs	r4, r4, r5
 80001f4:	10a4      	asrs	r4, r4, #2
 80001f6:	42a6      	cmp	r6, r4
 80001f8:	d105      	bne.n	8000206 <__libc_init_array+0x2e>
 80001fa:	bd70      	pop	{r4, r5, r6, pc}
 80001fc:	00b3      	lsls	r3, r6, #2
 80001fe:	58eb      	ldr	r3, [r5, r3]
 8000200:	4798      	blx	r3
 8000202:	3601      	adds	r6, #1
 8000204:	e7ee      	b.n	80001e4 <__libc_init_array+0xc>
 8000206:	00b3      	lsls	r3, r6, #2
 8000208:	58eb      	ldr	r3, [r5, r3]
 800020a:	4798      	blx	r3
 800020c:	3601      	adds	r6, #1
 800020e:	e7f2      	b.n	80001f6 <__libc_init_array+0x1e>
 8000210:	08000238 	.word	0x08000238
 8000214:	08000238 	.word	0x08000238
 8000218:	0800023c 	.word	0x0800023c
 800021c:	08000238 	.word	0x08000238

08000220 <_init>:
 8000220:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000222:	46c0      	nop			@ (mov r8, r8)
 8000224:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000226:	bc08      	pop	{r3}
 8000228:	469e      	mov	lr, r3
 800022a:	4770      	bx	lr

0800022c <_fini>:
 800022c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800022e:	46c0      	nop			@ (mov r8, r8)
 8000230:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000232:	bc08      	pop	{r3}
 8000234:	469e      	mov	lr, r3
 8000236:	4770      	bx	lr
